#!/bin/bash

# This utility script will show you the help provided by the Structural Preprocessing app
# within the HCPprocessPipelines.simg Singularity container or from within the
# HCPprocessingPipelinesSandbox.

get_options()
{
	local arguments=($@)

	# initialize global output variables
	unset g_run_type

	# parse arguments
	local num_args=${#arguments[@]}
	local argument
	local index=0

	while [ ${index} -lt ${num_args} ]; do
		argument=${arguments[index]}

		case ${argument} in
			--run-type=*)
				g_run_type=${argument/*=/""}
				g_run_type=$(echo ${g_run_type} | tr '[:lower:]' '[:upper:]')
				index=$(( index + 1 ))
				;;
			--container)
				g_run_type="CONTAINER"
				index=$(( index + 1 ))
				;;
			--sandbox)
				g_run_type="SANDBOX"
				index=$(( index + 1 ))
				;;
			*)
				echo "Unrecognized option: ${argument}"
				exit 1
				;;
		esac

	done

	# check parameters

	if [ -z "${g_run_type}" ]; then
		echo "ERROR: run type (--run-type=[CONTAINER|SANDBOX], --container, or --sandbox) required"
		exit 1
	fi

	if [ "${g_run_type}" != "CONTAINER" -a "${g_run_type}" != "SANDBOX" ]; then 
		echo "ERROR: run type must be CONTAINER or SANDBOX"
		exit 1
	fi
}

main()
{
	get_options "$@"

	local run_cmd
	run_cmd=""

	if [ "${g_run_type}" = "CONTAINER" ]; then
		run_cmd+="singularity run  -B ${HOME}/data:/data --app StructuralPreprocessing HCPprocessPipelines.simg"
	elif [ "${g_run_type}" = "SANDBOX" ]; then
		run_cmd+="singularity exec -B ${HOME}/data:/data HCPprocessPipelinesSandbox/ /pipeline_tools/HCPpipelinesRunUtils/StructuralPreprocessing/StructuralPreprocessing.SINGULARITY_PROCESS"		
	else
		echo "ERROR: Unrecognized run type: ${g_run_type}"
		exit 1
	fi

	run_cmd+=" --help"

	echo "run_cmd: ${run_cmd}"

	time ${run_cmd}
}

# Invoke the main function to get things started
main "$@"
